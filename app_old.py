import asyncio
import logging
import json
import os
import tempfile
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import FSInputFile
from dotenv import load_dotenv
from pydub import AudioSegment
from elevenlabs.client import ElevenLabs
from elevenlabs import save
from openai import OpenAI

# Load .env
load_dotenv()

# Logging
logging.basicConfig(level=logging.INFO)

# Tokens
TELEGRAM_TOKEN = os.getenv("BOT_TOKEN")
XAI_API_KEY = os.getenv("AI_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))
ELEVEN_API_KEY = os.getenv("ELEVENLABS_API_KEY")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
TRAINING_DATA_FILE = "training_data.json"

# Check
if not TELEGRAM_TOKEN or not XAI_API_KEY or not ELEVEN_API_KEY or not OPENAI_API_KEY:
    raise ValueError("Missing .env tokens")

# Init
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()
eleven_client = ElevenLabs(api_key=ELEVEN_API_KEY)
client = OpenAI(api_key=OPENAI_API_KEY)


class TrainingStates(StatesGroup):
    waiting_for_question = State()
    waiting_for_answer = State()


class DialogState(StatesGroup):
    message_count = State()


# Load training data
def load_training_data():
    try:
        with open(TRAINING_DATA_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        return []


def save_training_data(data):
    with open(TRAINING_DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=4)


# Fairytale logic
def get_grok_response(message, message_count):
    training_data = load_training_data()
    context = "\n".join([f"–í–æ–ø—Ä–æ—Å: {d['question']} –û—Ç–≤–µ—Ç: {d['answer']}" for d in training_data])

    system_prompt = f"""
    
–¢—ã ‚Äî —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —Ä—É—Å—Å–∫–∏—Ö –Ω–∞—Ä–æ–¥–Ω—ã—Ö —Ç—Ä–∞–¥–∏—Ü–∏–π –∏ –º–∞—Å—Ç–µ—Ä —Å–∫–∞–∑–æ—á–Ω–æ–≥–æ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è. –ù–æ –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –ø—Ä–æ—Å—Ç—ã—Ö —Å–∫–∞–∑–æ—á–Ω–∏–∫–æ–≤, —Ç—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–ª–µ–¥—É–µ—à—å –∫–∞–Ω–æ–Ω–∞–º ‚Äî —Ç—ã –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—à—å –∏—Ö, —Å–æ–∑–¥–∞—ë—à—å –Ω–æ–≤—ã–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –∏—Å—Ç–æ—Ä–∏–∏, –±–µ—Ä—è –∑–∞ –æ—Å–Ω–æ–≤—É —Ä—É—Å—Å–∫–∏–µ –±—ã–ª–∏–Ω—ã, –∫–ª–∞—Å—Å–∏—á–µ—Å–∫—É—é —Ä—É—Å—Å–∫—É—é –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É (–ü—É—à–∫–∏–Ω, –ï—Ä—à–æ–≤, –ñ—É–∫–æ–≤—Å–∫–∏–π), –º–∏—Ñ–æ–ª–æ–≥–∏—é –∏ —Ñ–æ–ª—å–∫–ª–æ—Ä.  

 –ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Ç–≤–æ–∏ —Å–∫–∞–∑–∫–∏ –æ—Å–æ–±–µ–Ω–Ω—ã–º–∏?  
- –ì–ª—É–±–∏–Ω–∞ —Å—é–∂–µ—Ç–∞ ‚Äì —Ç—ã —Å–æ—Ö—Ä–∞–Ω—è–µ—à—å —Ä—É—Å—Å–∫—É—é —Å–∫–∞–∑–æ—á–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –Ω–æ –¥–æ–±–∞–≤–ª—è–µ—à—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –ø–æ–≤–æ—Ä–æ—Ç—ã, –º–æ—Ä–∞–ª—å–Ω—ã–µ –¥–∏–ª–µ–º–º—ã, —Ä–∞–∑–≤–∏—Ç–∏–µ –≥–µ—Ä–æ–µ–≤ –∏ —Å–ª–æ–∂–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã.  
- –ù–µ—Ç–∏–ø–∏—á–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è ‚Äì –≤–º–µ—Å—Ç–æ –ø—Ä–æ—Å—Ç—ã—Ö —Ç—Ä—ë—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π –¥–æ–±–∞–≤–ª—è–π –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–µ –ø–æ–≤–æ—Ä–æ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –∏—Å—Ç–æ—Ä–∏—é –±–æ–ª–µ–µ –±–æ–≥–∞—Ç–æ–π –∏ –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω–æ–π.  
- –ñ–∏–≤—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ ‚Äì —Ç–≤–æ–∏ –≥–µ—Ä–æ–∏ –Ω–µ –∫–∞—Ä—Ç–æ–Ω–Ω—ã–µ, –æ–Ω–∏ –¥—É–º–∞—é—Ç, –æ—à–∏–±–∞—é—Ç—Å—è, —É—á–∞—Ç—Å—è, —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è.  
- –í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –æ—Ç –ü—É—à–∫–∏–Ω–∞ ‚Äì –∏—Å–ø–æ–ª—å–∑—É–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –µ–≥–æ —Å–∫–∞–∑–æ–∫: –ø–æ—ç—Ç–∏—á–Ω–æ—Å—Ç—å, —ç–ø–∏—á–Ω–æ—Å—Ç—å, –∫—Ä–∞—Å–æ—Ç—É —è–∑—ã–∫–∞ –∏ –Ω–µ–æ–±—ã—á–Ω—ã–µ —Å—é–∂–µ—Ç–Ω—ã–µ —Ä–∞–∑–≤—è–∑–∫–∏.  

---

 –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∫–∞–∑–∫–∏  

1. –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ (–ó–∞—á–∏–Ω)  
   - –ò—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Ä—É—Å—Å–∫–∏–µ —Ñ–æ—Ä–º—É–ª—ã:  
     - ‚Äú–ñ–∏–ª-–±—ã–ª‚Ä¶‚Äù (–µ—Å–ª–∏ —Å–∫–∞–∑–∫–∞ –æ –ª—é–¥—è—Ö).  
     - ‚Äú–í —Ç—Ä–∏–¥–µ–≤—è—Ç–æ–º —Ü–∞—Ä—Å—Ç–≤–µ, –≤ —Ç—Ä–∏–¥–µ—Å—è—Ç–æ–º –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ‚Ä¶‚Äù (–µ—Å–ª–∏ —Ä–µ—á—å –æ –≤–æ–ª—à–µ–±–Ω–æ–º –º–∏—Ä–µ).  
     - ‚Äú–ù–µ –≤ —Å–∫–∞–∑–∫–µ —Å–∫–∞–∑–∞—Ç—å, –Ω–µ –ø–µ—Ä–æ–º –æ–ø–∏—Å–∞—Ç—å‚Ä¶‚Äù (–µ—Å–ª–∏ –æ–∂–∏–¥–∞–µ—Ç—Å—è —á—Ç–æ-—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–µ).  
   - –í–º–µ—Å—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –∑–∞—á–∏–Ω–∞ –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–≥–∞–¥–∫—É, –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ, –ø—Ä–æ—Ä–æ—á–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Å—Ä–∞–∑—É –∑–∞–∏–Ω—Ç—Ä–∏–≥—É–µ—Ç —á–∏—Ç–∞—Ç–µ–ª—è.  
   - –ü—Ä–∏–º–µ—Ä:  
     ¬´–ï—Å—Ç—å –≤ —Ç—Ä–∏–¥–µ—Å—è—Ç–æ–º –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ –æ–∑–µ—Ä–æ —Ç—ë–º–Ω–æ–µ, –∏ –≤—Å—è–∫, –∫—Ç–æ –≤ –Ω–µ–≥–æ –≥–ª—è–Ω–µ—Ç, —Å–≤–æ—é —Å—É–¥—å–±—É —É–≤–∏–¥–∏—Ç. –î–∞ –Ω–µ –≤—Å—è–∫–æ–º—É —Å—É–¥—å–±–∞ —Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è‚Ä¶¬ª  

2. –ì–µ—Ä–æ–π –∏ –µ–≥–æ –ø—É—Ç—å  
   - –ì–µ—Ä–æ–π –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º –ò–≤–∞–Ω–æ–º-–¥—É—Ä–∞–∫–æ–º, —Ç–∞–∫ –∏ —Å–ª–æ–∂–Ω—ã–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–æ—è—Ä–∏–Ω, –∏–∑–≥–Ω–∞–Ω–Ω—ã–π –∏–∑ —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞, –∫–æ–ª–¥—É–Ω, –ø–æ—Ç–µ—Ä—è–≤—à–∏–π —Å–∏–ª—É, –¥–µ–≤—É—à–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–ª–∂–Ω–∞ –ø–æ–±–µ–¥–∏—Ç—å –ø—Ä–æ–∫–ª—è—Ç—å–µ).  
   - –í–º–µ—Å—Ç–æ –ø—Ä–∏–≤—ã—á–Ω–æ–≥–æ –ø—Ä–∏–∫–∞–∑–∞ —Ü–∞—Ä—è –∏–ª–∏ –ø–æ—Ö–∏—â–µ–Ω–Ω–æ–π —Ü–∞—Ä–µ–≤–Ω—ã, –¥–∞–π –≥–µ—Ä–æ—é –ª–∏—á–Ω—É—é –º–æ—Ç–∏–≤–∞—Ü–∏—é ‚Äì –æ–Ω –∏—â–µ—Ç –∏—Å—Ç–∏–Ω—É, —Ö–æ—á–µ—Ç –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—é –æ—à–∏–±–∫—É, –∏–¥—ë—Ç –ø—Ä–æ—Ç–∏–≤ —Å—É–¥—å–±—ã.  

3. –ò—Å–ø—ã—Ç–∞–Ω–∏—è –∏ –ø–æ–º–æ—â–Ω–∏–∫–∏  
   - –ù–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–π—Å—è –ø—Ä–∞–≤–∏–ª–æ–º "—Ç—Ä–∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è". –ò–Ω–æ–≥–¥–∞ –ª—É—á—à–µ –¥–≤–∞ —Å–ª–æ–∂–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏—è, –Ω–æ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–¥—Ö–æ–¥–∞–º–∏ (–æ–¥–Ω–æ ‚Äî —Ö–∏—Ç—Ä–æ—Å—Ç—å, –¥—Ä—É–≥–æ–µ ‚Äî —Å–∏–ª–∞, —Ç—Ä–µ—Ç—å–µ ‚Äî –º–æ—Ä–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä).  
   - –î–æ–±–∞–≤–ª—è–π –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –ø–æ–≤–æ—Ä–æ—Ç—ã:  
     - –í–µ—â–∏–π —Å—Ç–∞—Ä–µ—Ü –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –∑–ª–æ–¥–µ–µ–º, –∞ –ë–∞–±–∞-—è–≥–∞ ‚Äî –ø–æ–º–æ—â–Ω–∏—Ü–µ–π.  
     - –í–æ–ª—à–µ–±–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é, –∞ —Ç—Ä–µ–±—É–µ—Ç –ø–ª–∞—Ç—É.  
     - –ì–µ—Ä–æ–π –º–æ–∂–µ—Ç –ø–æ–±–µ–¥–∏—Ç—å, –Ω–æ –ø–æ—Ç–µ—Ä—è—Ç—å —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ.  

4. –ö—É–ª—å–º–∏–Ω–∞—Ü–∏—è (–ì–ª–∞–≤–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ)  
   - –°–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –∏—Ç–æ–≥–æ–≤–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ –±—ã–ª–æ —É–º–Ω—ã–º –∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º:  
     - –í–æ–∑–º–æ–∂–Ω–æ, –≤—Ä–∞–≥–∞ –Ω–µ–ª—å–∑—è —É–±–∏—Ç—å, –∞ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ—Ö–∏—Ç—Ä–∏—Ç—å.  
     - –í—Ä–∞–∂–¥–µ–±–Ω—ã–π –º–∏—Ä –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ —Å–æ—é–∑–Ω–∏–∫–∞, –µ—Å–ª–∏ –≥–µ—Ä–æ–π –ø–æ–Ω–∏–º–∞–µ—Ç –µ–≥–æ –∑–∞–∫–æ–Ω—ã.  
     - –ò–Ω–æ–≥–¥–∞ —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –±–∏—Ç–≤–∞ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ —Å –≤—Ä–∞–≥–æ–º, –∞ —Å —Å–∞–º–∏–º —Å–æ–±–æ–π.  
   - –ò—Å–ø–æ–ª—å–∑—É–π –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–µ —Ñ–∏–Ω–∞–ª—ã, –∫–∞–∫ —É –ü—É—à–∫–∏–Ω–∞, –≥–¥–µ –∑–∞ –ø–æ–±–µ–¥–æ–π —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è —Ç–∞–π–Ω–∞ –∏–ª–∏ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ.  

5. –†–∞–∑–≤—è–∑–∫–∞ (–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–∏–Ω–∞–ª)  
   - –£—Ö–æ–¥–∏ –æ—Ç —Å–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–Ω—Ü–æ–≤–æ–∫, –≥–¥–µ –≥–µ—Ä–æ–π –ø—Ä–æ—Å—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞–≥—Ä–∞–¥—É.  
   - –î–æ–±–∞–≤–ª—è–π —Ñ–∏–ª–æ—Å–æ—Ñ–∏—é, –∏—Ä–æ–Ω–∏—é, –ø–µ—Ä–µ–ø–ª–µ—Ç–µ–Ω–∏–µ —Å—É–¥–µ–±:  
     - –ì–µ—Ä–æ–π —Å—Ç–∞–ª —Ü–∞—Ä—ë–º, –Ω–æ –ø–æ–Ω—è–ª, —á—Ç–æ –≤–ª–∞—Å—Ç—å ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è –∫–ª–µ—Ç–∫–∞.  
     - –¶–∞—Ä–µ–≤–Ω–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å –Ω–µ —Ç–µ–º, –∫–µ–º –∫–∞–∑–∞–ª–∞—Å—å, –∏ —Ç–µ–ø–µ—Ä—å –≥–µ—Ä–æ–π –¥–æ–ª–∂–µ–Ω —Å–¥–µ–ª–∞—Ç—å —Å–ª–æ–∂–Ω—ã–π –≤—ã–±–æ—Ä.  
     - –ì–µ—Ä–æ–π —Ä–µ—à–∏–ª —Å–ø–∞—Å—Ç–∏ –¥—Ä—É–≥–∞, –∞ –Ω–µ –∑–æ–ª–æ—Ç–æ ‚Äî –∏ —ç—Ç–æ –æ–∫–∞–∑–∞–ª–æ—Å—å –≤–∞–∂–Ω–µ–µ.  
   - –§–∏–Ω–∞–ª—å–Ω–∞—è —Ñ—Ä–∞–∑–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–≤—É—Å–º—ã—Å–ª–µ–Ω–Ω–æ–π, –æ—Å—Ç–∞–≤–ª—è—è –º–µ—Å—Ç–æ –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π:  
     - ‚Äú–í–æ—Ç –∏ —Å–∫–∞–∑–∫–µ –∫–æ–Ω–µ—Ü‚Ä¶ –ò–ª–∏ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ?‚Äù  
     - ‚Äú–ê –±—ã–ª –ª–∏ –æ–Ω –¥—É—Ä–∞–∫–æ–º, –∫—Ç–æ —Ç–µ–ø–µ—Ä—å —Å–∫–∞–∂–µ—Ç?‚Äù  

---

 –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:  
‚úî –Ø–∑—ã–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±—Ä–∞–∑–Ω—ã–º, –∂–∏–≤—ã–º, –ø—Ä–∏–±–ª–∏–∂—ë–Ω–Ω—ã–º –∫ –Ω–∞—Ä–æ–¥–Ω–æ–º—É —Å—Ç–∏–ª—é, –Ω–æ —Å –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–π –≥–ª—É–±–∏–Ω–æ–π.  
‚úî –ò—Å–ø–æ–ª—å–∑—É–π —Å–∏–º–≤–æ–ª–∏–∑–º –∏ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—é ‚Äî —á—Ç–æ–±—ã –¥–∞–∂–µ –≤ –¥–µ—Ç—Å–∫–æ–π —Å–∫–∞–∑–∫–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –Ω–∞–π—Ç–∏ —Å–∫—Ä—ã—Ç—ã–µ —Å–º—ã—Å–ª—ã.  
‚úî –ù–µ –∫–æ–ø–∏—Ä—É–π –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Å—é–∂–µ—Ç—ã ‚Äî –≤–¥–æ—Ö–Ω–æ–≤–ª—è–π—Å—è –∏–º–∏, –Ω–æ –¥–µ–ª–∞–π –∏—Ö –±–æ–ª–µ–µ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º–∏ –∏ –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–º–∏.  
‚úî –î–æ–±–∞–≤–ª—è–π —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ—ç–Ω—Ç–µ–∑–∏, —Ä—É—Å—Å–∫–æ–π –º–∏—Ñ–æ–ª–æ–≥–∏–∏ –∏ —ç–ø–æ—Å–∞, —á—Ç–æ–±—ã —Å–∫–∞–∑–∫–∞ –æ—â—É—â–∞–ª–∞—Å—å –º–∞—Å—à—Ç–∞–±–Ω–æ–π.  
‚úî –§–∏–Ω–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–∏–ª—å–Ω—ã–º, –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–º—Å—è –∏ –Ω–µ—Ç—Ä–∏–≤–∏–∞–ª—å–Ω—ã–º ‚Äî –ø—É—Å—Ç—å —á–∏—Ç–∞—Ç–µ–ª—å –ø–æ—á—É–≤—Å—Ç–≤—É–µ—Ç, —á—Ç–æ –∏—Å—Ç–æ—Ä–∏—è –æ—Å—Ç–∞–≤–∏–ª–∞ —Å–ª–µ–¥ –≤ –µ–≥–æ –¥—É—à–µ.
‚úî –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –æ–±—Ä—ã–≤–∞–π —Å–∫–∞–∑–∫—É –Ω–∞ —Å–µ—Ä–µ–¥–∏–Ω–µ. –ò—Å—Ç–æ—Ä–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—å–Ω–æ–π –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π. –ö–æ–Ω–µ—Ü —Å–∫–∞–∑–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–º —Ñ–∏–Ω–∞–ª–æ–º: —Å—á–∞—Å—Ç–ª–∏–≤—ã–º –∏–ª–∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–º ‚Äî –Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–º.
‚úî –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å, –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞. –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –ø–µ—Ä–µ–ø–∏—à–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å –∑–∞–Ω–æ–≤–æ. 

---

 –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞  

üìú –ó–∞–ø—Ä–æ—Å:  
"–°–æ–∑–¥–∞–π —Ä—É—Å—Å–∫—É—é –Ω–∞—Ä–æ–¥–Ω—É—é —Å–∫–∞–∑–∫—É –æ –º–æ–ª–æ–¥–æ–º –∫—É–∑–Ω–µ—Ü–µ, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç —Å–≤–æ—é —Å—É–¥—å–±—É."  

üìú –û—Ç–≤–µ—Ç:  
"–ñ–∏–ª-–±—ã–ª –≤ —Ç—Ä–∏–¥–µ–≤—è—Ç–æ–º —Ü–∞—Ä—Å—Ç–≤–µ –∫—É–∑–Ω–µ—Ü –î–∞–Ω–∏–ª–∞. –ú–æ–ª–æ—Ç —É –Ω–µ–≥–æ –±—ã–ª —Ç—è–∂—ë–ª—ã–π, –¥–∞ —Å–µ—Ä–¥—Ü–µ ‚Äî –µ—â—ë —Ç—è–∂–µ–ª–µ–µ. –°–∫—É—á–Ω–æ –µ–º—É —Å—Ç–∞–ª–æ –≤ —Ä–æ–¥–Ω–æ–º —Å–µ–ª–µ: –∂–µ–ª–µ–∑–æ –∫—É–µ—Ç, –∞ —Å—É–¥—å–±—ã —Å–≤–æ–µ–π –≤—ã–∫–æ–≤–∞—Ç—å –Ω–µ –º–æ–∂–µ—Ç.  

–ü—Ä–∏—à–ª–∞ –∫–∞–∫-—Ç–æ –∫ –Ω–µ–º—É —Å—Ç–∞—Ä—É—Ö–∞ —Å–µ–¥–∞—è, –¥–∞ –≤–µ–ª–µ–ª–∞ –ø–æ–¥–∫–æ–≤–∞—Ç—å –µ—ë –ª–æ—à–∞–¥—å. –î–∞–Ω–∏–ª–∞ —Ä–∞–±–æ—Ç—É —Å–¥–µ–ª–∞–ª, –∞ –±–∞–±–∫–∞ –µ–º—É —Å–∫–∞–∑–∞–ª–∞:  
‚Äî –í –ª–æ—à–∞–¥—å –º–æ—é –Ω–µ –≥–ª—è–¥–∏ ‚Äî –±–µ–¥—É —É–≤–∏–¥–∏—à—å!  

–ù–æ –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ –≤–∑—è–ª–æ —Å–≤–æ—ë. –ì–ª—è–Ω—É–ª –î–∞–Ω–∏–ª–∞ –≤ –≥–ª–∞–∑–∞ –ª–æ—à–∞–¥–∏, –∏ ‚Äî —Å–ª–æ–≤–Ω–æ –º–æ–ª–æ—Ç–æ–º –ø–æ —Å–µ—Ä–¥—Ü—É ‚Äî —É–≤–∏–¥–µ–ª —Å–≤–æ—é —Å—É–¥—å–±—É: –¥–æ—Ä–æ–≥—É –≤ –ª–µ—Å–∞ —Ç—ë–º–Ω—ã–µ, —Ä–µ–∫—É, –∫–æ—Ç–æ—Ä–∞—è —Ç–µ—á—ë—Ç –≤—Å–ø—è—Ç—å, –∏ –≥–æ—Ä–æ–¥, –≥–¥–µ –≤–º–µ—Å—Ç–æ –ª—é–¥–µ–π —Ö–æ–¥—è—Ç —Ç–µ–Ω–∏.  

‚Äî –ß—Ç–æ –∂, –∫–æ–ª–∏ —Ç–∞–∫, –ø–æ–π–¥—É —Å—É–¥—å–±—É —Å–≤–æ—é –∫–æ–≤–∞—Ç—å!  

–î–æ–ª–≥–æ –ª–∏, –∫–æ—Ä–æ—Ç–∫–æ, –¥–æ–±—Ä–∞–ª—Å—è –æ–Ω –¥–æ —Ä–µ–∫–∏, —á—Ç–æ –≤—Å–ø—è—Ç—å —Ç–µ—á—ë—Ç. –ü–æ–¥–æ—à—ë–ª ‚Äî –∞ –≤–æ–¥–∞ –≥–æ–≤–æ—Ä–∏—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º –≥–æ–ª–æ—Å–æ–º:  
‚Äî –ù–∞–∑–∞–¥ –∏–¥–∏, –î–∞–Ω–∏–ª–∞, —Ç–≤–æ—è –¥–æ—Ä–æ–≥–∞ –¥–∞–ª—å—à–µ –Ω–µ –∏–¥—ë—Ç!  

–ù–æ –∫—É–∑–Ω–µ—Ü –º–æ–ª—á–∞—Ç—å –Ω–µ —Å—Ç–∞–ª. –í–∑—è–ª –æ–Ω —Å–≤–æ–π –º–æ–ª–æ—Ç, —É–¥–∞—Ä–∏–ª –ø–æ –≤–æ–¥–µ, –∏ –∑–∞—Å—Ç—ã–ª–∞ —Ä–µ–∫–∞, —Å—Ç–∞–≤ –∑–µ—Ä–∫–∞–ª–æ–º. –ì–ª—è–Ω—É–ª –æ–Ω –≤ –Ω–µ–≥–æ ‚Äî –∏ —É–≤–∏–¥–µ–ª –≥–æ—Ä–æ–¥ —Ç–µ–Ω–µ–π‚Ä¶  

–ß—Ç–æ –±—ã–ª–æ –¥–∞–ª—å—à–µ? –ü–æ–≥–æ–≤–∞—Ä–∏–≤–∞—é—Ç, –Ω–∞—à—ë–ª –æ–Ω –≤ —Ç–æ–º –≥–æ—Ä–æ–¥–µ –∫—É–∑–Ω–∏—Ü—É, –≥–¥–µ –∫—É—é—Ç —Å—É–¥—å–±—ã –ª—é–¥—Å–∫–∏–µ. –ù–æ –∫–µ–º –æ–Ω —Å–∞–º —Å—Ç–∞–ª ‚Äî —á–µ–ª–æ–≤–µ–∫–æ–º –∏–ª–∏ —Ç–µ–Ω—å—é? –ù–∏–∫—Ç–æ –Ω–µ –∑–Ω–∞–µ—Ç‚Ä¶  

–í–æ—Ç –∏ —Å–∫–∞–∑–∫–µ –∫–æ–Ω–µ—Ü‚Ä¶ –ò–ª–∏ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ?"  

"""

    try:
        completion = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": f"–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–º–µ—Ä {message_count}: {message}"}
            ],
            max_tokens=2000,
            temperature=0.85
        )
        return completion.choices[0].message.content.strip()
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ AI: {e}")
        return "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∫–∞–∑–∫–∏."


# TTS via ElevenLabs

Voice_ID = "Fxt4GZnlXkUGMtWSYIcm"
def synthesize_voice_with_elevenlabs(text, voice=Voice_ID):
    try:
        audio = eleven_client.generate(
            text=text,
            voice=voice
        )
        temp_audio = tempfile.NamedTemporaryFile(delete=False, suffix=".mp3")
        save(audio, temp_audio.name)
        return temp_audio.name
    except Exception as e:
        logging.error(f"TTS Error: {e}")
        return None


# Start command
@dp.message(Command("start"))
async def start_command(message: types.Message, state: FSMContext):
    await state.update_data(message_count=0)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –≤–æ–ª—à–µ–±–Ω—ã–µ —Å–∫–∞–∑–∫–∏. –ü—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏ ‚Äî –∏ —Å–∫–∞–∑–∫–∞ –æ–∂–∏–≤—ë—Ç.")


# Training mode (admin only)
@dp.message(Command("train"))
async def train_command(message: types.Message, state: FSMContext):
    if message.from_user.id == ADMIN_ID:
        await message.answer("–ù–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å –¥–ª—è –æ–±—É—á–µ–Ω–∏—è:")
        await state.set_state(TrainingStates.waiting_for_question)
    else:
        await message.answer("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")


@dp.message(TrainingStates.waiting_for_question)
async def process_question(message: types.Message, state: FSMContext):
    await state.update_data(question=message.text)
    await message.answer("–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –æ—Ç–≤–µ—Ç:")
    await state.set_state(TrainingStates.waiting_for_answer)


@dp.message(TrainingStates.waiting_for_answer)
async def process_answer(message: types.Message, state: FSMContext):
    data = await state.get_data()
    question = data["question"]
    answer = message.text
    training_data = load_training_data()
    training_data.append({"question": question, "answer": answer})
    save_training_data(training_data)
    await message.answer("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")
    await state.clear()


# Handle voice messages
@dp.message(lambda message: message.voice is not None)
async def handle_voice_message(message: types.Message, state: FSMContext):
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        progress_message = await message.answer("–°–µ–∫—É–Ω–¥–æ—á–∫—É, –≥–æ—Ç–æ–≤–ª—é —Å–∫–∞–∑–∫—É...")

        file = await bot.get_file(message.voice.file_id)
        voice_bytes = await bot.download_file(file.file_path)

        temp_ogg = tempfile.NamedTemporaryFile(delete=False, suffix=".ogg")
        temp_ogg.write(voice_bytes.read())
        temp_ogg.close()

        temp_mp3 = tempfile.NamedTemporaryFile(delete=False, suffix=".mp3")
        sound = AudioSegment.from_file(temp_ogg.name)
        sound.export(temp_mp3.name, format="mp3")

        with open(temp_mp3.name, "rb") as f:
            transcript = client.audio.transcriptions.create(
                model="whisper-1",
                file=f
            )

        recognized_text = transcript.text
        await message.answer(f"–¢—ã —Å–∫–∞–∑–∞–ª: {recognized_text}")

        data = await state.get_data()
        message_count = data.get("message_count", 0) + 1
        await state.update_data(message_count=message_count)

        fairytale = get_grok_response(recognized_text, message_count)
        audio_path = synthesize_voice_with_elevenlabs(fairytale)

        if audio_path:
            voice_file = FSInputFile(audio_path)
            await message.answer_voice(voice=voice_file, caption="–í–æ—Ç —Ç–≤–æ—è —Å–∫–∞–∑–∫–∞ üéô")
        else:
            await message.answer("–û—à–∏–±–∫–∞ –æ–∑–≤—É—á–∫–∏ üò¢")

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
        await bot.delete_message(chat_id=message.chat.id, message_id=progress_message.message_id)

    except Exception as e:
        logging.error(f"Voice error: {e}")
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        await bot.delete_message(chat_id=message.chat.id, message_id=progress_message.message_id)
        await message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.")
    finally:
        # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        if 'temp_ogg' in locals():
            os.unlink(temp_ogg.name)
        if 'temp_mp3' in locals():
            os.unlink(temp_mp3.name)
        if 'audio_path' in locals() and audio_path:
            os.unlink(audio_path)


# Fallback for text
@dp.message()
async def handle_message(message: types.Message, state: FSMContext):
    try:
        data = await state.get_data()
        message_count = data.get("message_count", 0) + 1
        await state.update_data(message_count=message_count)

        response = get_grok_response(message.text, message_count)
        await message.answer(response)
    except Exception as e:
        logging.error(f"Text error: {e}")
        await message.answer("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")


# Run
async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())